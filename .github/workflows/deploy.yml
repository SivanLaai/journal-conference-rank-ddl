name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '* */24 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Cache
      uses: actions/cache@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@main
      with: 
        node-version: '15.x'
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyYAML jsonschema
        python -m pip install -r ./cli/req.txt
    - name: generate yml files
      run: |
        python ./cli/crawler.py --sql_url ${{secrets.SQL_URL}} --source_url ${{vars.SOURCE_URL}}
    # - name: Validate yml files
    #   run: |
    #     python ./scripts/validate
    # - name: Assemble yml files
    #   run: |
    #     mkdir -p public/data
    #     cp -rf data/confs.yml public/data
    #     cp -rf data/jours.yml public/data
    #     cp -rf data/types.yml public/data
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependency and build
      run: |
        yarn config set strict-ssl false 
        yarn install
        yarn build
        echo ${{vars.WEB_URL}} > ./dist/CNAME
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{secrets.ACCESS_TOKEN}}
        publish_dir: ./dist
